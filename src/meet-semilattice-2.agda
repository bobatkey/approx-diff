{-# OPTIONS --postfix-projections --safe --without-K #-}

module meet-semilattice-2 where

open import Level
open import Data.Product using (proj‚ÇÅ; proj‚ÇÇ; _√ó_; _,_)
open import Data.Unit using (tt) renaming (‚ä§ to Unit)
open import Data.Empty using () renaming (‚ä• to ùüò)
open import Relation.Binary using (IsEquivalence; Reflexive)
open import basics
open import poset using (Poset)

record MeetSemilattice : Set (suc 0‚Ñì) where
  no-eta-equality
  open Poset

  field
    X       : Poset
    _‚àß_     : X .Carrier ‚Üí X .Carrier ‚Üí X .Carrier
    ‚ä§       : X. Carrier
    ‚àß-isMeet  : IsMeet (X .‚â§-isPreorder) _‚àß_
    ‚ä§-isTop   : IsTop (X. ‚â§-isPreorder) ‚ä§

  open IsPreorder (X .‚â§-isPreorder) renaming (refl to ‚â§-refl; trans to ‚â§-trans) public
